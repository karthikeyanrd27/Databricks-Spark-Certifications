Union Transformation 
 a = sc.parallelize(range(5))
a.collect()

b = sc.parallelize(range(5,10))
b.collect()
c = a.union(b)
c.collect()
Out[42]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]


Basically in Union 
RDD1 = 10 Partition 
RDD2 = 20 Partition
when rdd1.union(rdd2)  will hold 30 partitions 

we can repartition later 


#02 Scenrio 

rdd1 = sc.parallelize([1, 2, 3])
rdd2 = sc.parallelize([4, 5, 6])
rdd3 = sc.parallelize([7, 8, 9])

rdd = sc.union([rdd1, rdd2, rdd3])
rdd.collect()

we can union 'n' number of partitions

rdd1.getNumPartitions()
Out[44]: 8

rdd2.getNumPartitions()
Out[45]: 8

rdd3.getNumPartitions()
Out[46]: 8

rdd.getNumPartitions()
Out[50]: 24


#Intersection Concept 

rdd1 = sc.parallelize([1, 2, 3])
rdd2 = sc.parallelize([4, 5, 6])

rdd = rdd1.intersection(rdd2)
rdd.collect()

Out[54]: []


#Intersection Concept 

rdd1 = sc.parallelize([1, 2, 3])
rdd2 = sc.parallelize([4, 5, 3])

rdd = rdd1.intersection(rdd2)
rdd.collect()

Out[55]: [3]



Substract Transformation:

left = sc.parallelize(range(10))
right = sc.parallelize([2, 6])
left.subtract(right).collect()

Out[60]: [0, 1, 3, 4, 5, 7, 8, 9]


Cartesian : 

rdd = sc.parallelize([1,2,1])
a = rdd.cartesian(rdd)
a.collect()


Out[70]: [(1, 1), (1, 2), (1, 1), (2, 1), (2, 2), (2, 1), (1, 1), (1, 2), (1, 1)]


rdd = sc.parallelize([(1,1),(1,2),(1,3)])
a = rdd.cartesian(rdd)
a.collect()

Out[74]: 
[((1, 1), (1, 1)),
 ((1, 1), (1, 2)),
 ((1, 1), (1, 3)),
 ((1, 2), (1, 1)),
 ((1, 2), (1, 2)),
 ((1, 2), (1, 3)),
 ((1, 3), (1, 1)),
 ((1, 3), (1, 2)),
 ((1, 3), (1, 3))]
 
 
 Zip functions:
 
 
 a = ['Karthikeyan','Navaneethan','Nalini','Durairaj','Sakunthalla']
b = ['Thambi','Anna','Akka','appa','amma']
ardd = sc.parallelize(a)
brdd = sc.parallelize(b)
c = ardd.zip(brdd)
c.collect()


Out[6]: 
[('Karthikeyan', 'Thambi'),
 ('Navaneethan', 'Anna'),
 ('Nalini', 'Akka'),
 ('Durairaj', 'appa'),
 ('Sakunthalla', 'amma')]
 
 
Zip is containg the difference number of elements 
 
 a = ['karthikeyan']
b = ['thambi','anna','akka','amma','appa']
a = sc.parallelize(a)
b = sc.parallelize(b)
c = a.zip(b)
c.collect()

we can't zip when to differene number of elements RDD 

org.apache.spark.SparkException: Job aborted due to stage failure: Task 6 in stage 1.0 failed 1 times, most recent failure: Lost task 6.0 in stage 1.0 (TID 14, localhost, executor driver): org.apache.spark.SparkException: Can only zip RDDs with same number of elements in each partition
 
 
 